!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
ALL_TESTS_H	tests/all_tests.h	/^#define ALL_TESTS_H$/;"	d
AssertNotNull	src/assertions.h	/^#define AssertNotNull(/;"	d
COMMAND_H	src/command.h	/^#define COMMAND_H$/;"	d
CUTEST_VERSION	tests/CuTest.h	/^#define CUTEST_VERSION /;"	d
CU_ALLOC	tests/CuTest.h	/^#define CU_ALLOC(/;"	d
CU_TEST_H	tests/CuTest.h	/^#define CU_TEST_H$/;"	d
Command	src/command.h	/^typedef struct Command {$/;"	s
Command	src/command.h	/^} Command;$/;"	t	typeref:struct:Command
CuAssert	tests/CuTest.h	/^#define CuAssert(/;"	d
CuAssertDblEquals	tests/CuTest.h	/^#define CuAssertDblEquals(/;"	d
CuAssertDblEquals_LineMsg	tests/CuTest.c	/^void CuAssertDblEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertDblEquals_Msg	tests/CuTest.h	/^#define CuAssertDblEquals_Msg(/;"	d
CuAssertIntEquals	tests/CuTest.h	/^#define CuAssertIntEquals(/;"	d
CuAssertIntEquals_LineMsg	tests/CuTest.c	/^void CuAssertIntEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertIntEquals_Msg	tests/CuTest.h	/^#define CuAssertIntEquals_Msg(/;"	d
CuAssertPtrEquals	tests/CuTest.h	/^#define CuAssertPtrEquals(/;"	d
CuAssertPtrEquals_LineMsg	tests/CuTest.c	/^void CuAssertPtrEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertPtrEquals_Msg	tests/CuTest.h	/^#define CuAssertPtrEquals_Msg(/;"	d
CuAssertPtrNotNull	tests/CuTest.h	/^#define CuAssertPtrNotNull(/;"	d
CuAssertPtrNotNullMsg	tests/CuTest.h	/^#define CuAssertPtrNotNullMsg(/;"	d
CuAssertStrEquals	tests/CuTest.h	/^#define CuAssertStrEquals(/;"	d
CuAssertStrEquals_LineMsg	tests/CuTest.c	/^void CuAssertStrEquals_LineMsg(CuTest* tc, const char* file, int line, const char* message, $/;"	f
CuAssertStrEquals_Msg	tests/CuTest.h	/^#define CuAssertStrEquals_Msg(/;"	d
CuAssertTrue	tests/CuTest.h	/^#define CuAssertTrue(/;"	d
CuAssert_Line	tests/CuTest.c	/^void CuAssert_Line(CuTest* tc, const char* file, int line, const char* message, int condition)$/;"	f
CuFail	tests/CuTest.h	/^#define CuFail(/;"	d
CuFailInternal	tests/CuTest.c	/^static void CuFailInternal(CuTest* tc, const char* file, int line, CuString* string)$/;"	f	file:
CuFail_Line	tests/CuTest.c	/^void CuFail_Line(CuTest* tc, const char* file, int line, const char* message2, const char* message)$/;"	f
CuStrAlloc	tests/CuTest.c	/^char* CuStrAlloc(int size)$/;"	f
CuStrCopy	tests/CuTest.c	/^char* CuStrCopy(const char* old)$/;"	f
CuString	tests/CuTest.h	/^} CuString;$/;"	t	typeref:struct:__anon1
CuStringAppend	tests/CuTest.c	/^void CuStringAppend(CuString* str, const char* text)$/;"	f
CuStringAppendChar	tests/CuTest.c	/^void CuStringAppendChar(CuString* str, char ch)$/;"	f
CuStringAppendFormat	tests/CuTest.c	/^void CuStringAppendFormat(CuString* str, const char* format, ...)$/;"	f
CuStringDelete	tests/CuTest.c	/^void CuStringDelete(CuString *str)$/;"	f
CuStringInit	tests/CuTest.c	/^void CuStringInit(CuString* str)$/;"	f
CuStringInsert	tests/CuTest.c	/^void CuStringInsert(CuString* str, const char* text, int pos)$/;"	f
CuStringNew	tests/CuTest.c	/^CuString* CuStringNew(void)$/;"	f
CuStringResize	tests/CuTest.c	/^void CuStringResize(CuString* str, int newSize)$/;"	f
CuSuite	tests/CuTest.h	/^} CuSuite;$/;"	t	typeref:struct:__anon2
CuSuiteAdd	tests/CuTest.c	/^void CuSuiteAdd(CuSuite* testSuite, CuTest *testCase)$/;"	f
CuSuiteAddSuite	tests/CuTest.c	/^void CuSuiteAddSuite(CuSuite* testSuite, CuSuite* testSuite2)$/;"	f
CuSuiteDelete	tests/CuTest.c	/^void CuSuiteDelete(CuSuite *testSuite)$/;"	f
CuSuiteDetails	tests/CuTest.c	/^void CuSuiteDetails(CuSuite* testSuite, CuString* details)$/;"	f
CuSuiteInit	tests/CuTest.c	/^void CuSuiteInit(CuSuite* testSuite)$/;"	f
CuSuiteNew	tests/CuTest.c	/^CuSuite* CuSuiteNew(void)$/;"	f
CuSuiteRun	tests/CuTest.c	/^void CuSuiteRun(CuSuite* testSuite)$/;"	f
CuSuiteSummary	tests/CuTest.c	/^void CuSuiteSummary(CuSuite* testSuite, CuString* summary)$/;"	f
CuTest	tests/CuTest.h	/^struct CuTest$/;"	s
CuTest	tests/CuTest.h	/^typedef struct CuTest CuTest;$/;"	t	typeref:struct:CuTest
CuTestDelete	tests/CuTest.c	/^void CuTestDelete(CuTest *t)$/;"	f
CuTestInit	tests/CuTest.c	/^void CuTestInit(CuTest* t, const char* name, TestFunction function)$/;"	f
CuTestNew	tests/CuTest.c	/^CuTest* CuTestNew(const char* name, TestFunction function)$/;"	f
CuTestRun	tests/CuTest.c	/^void CuTestRun(CuTest* tc)$/;"	f
HELPER_H	src/helper.h	/^#define HELPER_H$/;"	d
HUGE_STRING_LEN	tests/CuTest.h	/^#define HUGE_STRING_LEN	/;"	d
MAIN_EXEC	makefile	/^MAIN_EXEC = task$/;"	m
MAX_TEST_CASES	tests/CuTest.h	/^#define MAX_TEST_CASES	/;"	d
NewCommand	src/command.c	/^Command * NewCommand() {$/;"	f
RunAllTests	tests/all_tests.c	/^void RunAllTests(void) $/;"	f
SRC_FILES	makefile	/^SRC_FILES = src\/helper.c src\/task_io.c src\/command.c$/;"	m
STRING_INC	tests/CuTest.h	/^#define STRING_INC	/;"	d
STRING_MAX	tests/CuTest.h	/^#define STRING_MAX	/;"	d
SUITE_ADD_TEST	tests/CuTest.h	/^#define SUITE_ADD_TEST(/;"	d
TASK_IO	src/task_io.h	/^#define TASK_IO$/;"	d
TEST_EXEC	makefile	/^TEST_EXEC = test$/;"	m
TEST_SRC_FILES	makefile	/^TEST_SRC_FILES = tests\/all_tests.c tests\/helper_tests.c tests\/CuTest.c tests\/task_io_test.c \\$/;"	m
T_ASSERT	src/assertions.h	/^#define T_ASSERT$/;"	d
TestFunction	tests/CuTest.h	/^typedef void (*TestFunction)(CuTest *);$/;"	t
buffer	tests/CuTest.h	/^	char* buffer;$/;"	m	struct:__anon1
command_size_t	src/command.h	/^static size_t command_size_t = sizeof(Command);$/;"	v
command_suite	tests/command_tests.c	/^CuSuite* command_suite() {$/;"	f
count	tests/CuTest.h	/^	int count;$/;"	m	struct:__anon2
data	src/command.h	/^	char **data;$/;"	m	struct:Command
failCount	tests/CuTest.h	/^	int failCount;$/;"	m	struct:__anon2
failed	tests/CuTest.h	/^	int failed;$/;"	m	struct:CuTest
function	tests/CuTest.h	/^	TestFunction function;$/;"	m	struct:CuTest
get_user_input	src/task_io.c	/^char *get_user_input(int max_len) {$/;"	f
helper_get_suite	tests/helper_tests.c	/^CuSuite* helper_get_suite() {$/;"	f
jumpBuf	tests/CuTest.h	/^	jmp_buf *jumpBuf;$/;"	m	struct:CuTest
kIoStartLen	src/task_io.c	/^static int kIoStartLen = 100;$/;"	v	file:
length	tests/CuTest.h	/^	int length;$/;"	m	struct:__anon1
list	tests/CuTest.h	/^	CuTest* list[MAX_TEST_CASES];$/;"	m	struct:__anon2
lowercase_str	src/helper.c	/^char * const lowercase_str(char * const to_lower) {$/;"	f
main	src/main.c	/^int main() {$/;"	f
main	tests/all_tests.c	/^int main(void)$/;"	f
message	tests/CuTest.h	/^	const char* message;$/;"	m	struct:CuTest
name	src/command.h	/^	char * name;$/;"	m	struct:Command
name	tests/CuTest.h	/^	char* name;$/;"	m	struct:CuTest
ran	tests/CuTest.h	/^	int ran;$/;"	m	struct:CuTest
size	tests/CuTest.h	/^	int size;$/;"	m	struct:__anon1
task_io_suite	tests/task_io_test.c	/^CuSuite* task_io_suite() {$/;"	f
test_get_user_input	tests/task_io_test.c	/^void test_get_user_input(CuTest *tc) {$/;"	f
test_lowercase_str	tests/helper_tests.c	/^void test_lowercase_str(CuTest *tc) {$/;"	f
test_new_command	tests/command_tests.c	/^void test_new_command(CuTest *tc) {$/;"	f
